#!/usr/bin/env groovy

pipeline 
{
    agent any 

    stages 
	{
	 stage('Initialize Repo')
	  {  
	   steps 
		{
		  script {

			source_environment_hostname = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/${wmioenv}.yml | grep -i hostname | cut -d '"' -f2 ''' ).trim()
			source_environment_port = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/${wmioenv}.yml | grep -i port | cut -d '"' -f2 ''' ).trim()
			admin_user = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/${wmioenv}.yml | grep -i admin_username | cut -d '"' -f2 ''' ).trim()
			source_type = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/${wmioenv}.yml | grep -i type | cut -d '"' -f2 ''' ).trim()
			repo_user = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/repo.yml | grep -i user | cut -d '"' -f2 ''' ).trim()
			 wmioapi_url = "https://${source_environment_hostname}:${source_environment_port}"          
			}
			
		echo "${source_environment_hostname}"
		echo "${source_environment_port}"
    		echo "${admin_user}"
		echo "${source_type}"
		echo "${repo_user}"
		echo "${wmioapi_url}"
		}
	   }
	stage('Sync Projects')
	 {
         steps {
		            sh 'pwd'
		            sh 'ls -lrt'
		         //   script{
	                   // wmioapi_url = "https://${source_environment_hostname}:${source_environment_port}"
		             //     echo "${wmioapi_url}"
		               //   }

		            script{
                      echo "Create / Sychronize the projects"
				 
			              echo "Remove the repo"	
			              sh '''
				            pwd
				              rm -rf ./${repoName}
				              git clone -b ${branchName} https://github.com/${repo_user}/${repoName}.git
				            pwd
				            ls -ltr  '''

			                dir(repoName)
		 			            { 
		   			        sh 'pwd'
	   	   			        sh 'ls -ltr' 		
			             		echo "API Check"
					//	DIR="./iPaas/wmioAPI/$apiName.zip"
					//	echo "${DIR}"
  						//if ( -d '$DIR' ); then
					//	def exists = fileExists "./iPaas/wmioAPI/$apiName.zip"
					//	echo "${exists}"
					//	if (exists) {
						//if (fileExists("${DIR}"))
					//	{
                     				echo "Importing asset ..."
						echo "API found and importing to ${wmioapi_url}"
					        def apiNames = params.apiName.split(',')
					        for(apiName in apiNames){
   						    apiName = apiName.trim() 
						      echo "$apiName"
							sh 'chmod +x ../pipelines/scripts/*.sh'
						     //  sh "../pipelines/scripts/importwebmioAPI.sh '${LOCAL_DEV_URL}' '${admin_user}' '${admin_password}' '${repoName}' '${apiName}' '${HOME_DIR}' debug"
						//	sh ''' 	 source ../pipelines/scripts/importwebmioAPI.sh; import_api "${apiName}" '${wmioapi_url}' '${admin_user}' '${admin_password}'   '''
							sh "source ../pipelines/scripts/importwebmioAPI.sh; import_api '${apiName}' '${wmioapi_url}' '${admin_user}' '${admin_password}' "
						            }           
				        }
					else 
						echo "API ${apiName} not found in Repo ${repoName}"
					}
            }
 }
 }
        
	}
}
